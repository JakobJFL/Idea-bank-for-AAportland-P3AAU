@page "/"
@using BusinessLogicLib.Models
@using BusinessLogicLib.Service
@using DataBaseLib.Models
@using DataBaseLib
@using Microsoft.AspNetCore.Components.Authorization

<div class="bgImg">
  <section class="py-4 text-center container">
    <div class="row py-lg-5">
      <div class="col-lg-6 col-md-6 mx-auto">
        <AuthorizeView>
          <Authorized>
            <div class="d-flex flex-row justify-content-center"><h1 class="fw-light">Administrator side</h1></div>
            <p>Du er logget ind som administrator</p>
          </Authorized>
          <NotAuthorized>
            <div class="d-flex flex-row justify-content-center"><h1 class="fw-light">Aalborg Portland's Idébank</h1></div>
            <p class="fs-5 py-1">
              Velkommen til Aalborg Portland's idébank. Her er det muligt at indsende dine egne
              projektidéer til eventuelle forbedringer eller ændringer i Aalborg Portland.
            </p>
            <NavLink href="/NewIdea">
              <button class="btn btn-lg btn-primary my-2 p-4 rounded-cos">Tilføj ny idé</button>
            </NavLink>
          </NotAuthorized>
        </AuthorizeView>
      </div>
    </div>
  </section>
</div>

<section class="py-5 bg-light">
  <div class="container p-0">
    <div class="row mb-5">
      <div class="col-sm">
        <div class="d-flex flex-row justify-content-between card card-body rounded-cos border-0">
          <div>
            <h6 class="text-muted">Idéer i alt</h6>
            <h4 class="mb-0 text-primary">@Dashboard.AllIdeas</h4>
          </div>
          <img class="data-card-icon" src="svg/dashboard/bank.svg">
        </div>
      </div>
      <div class="col-sm">
        <div class="d-flex flex-row justify-content-between card card-body rounded-cos border-0">
          <div>
            <h6 class="text-muted">Nye idéer</h6>
            <h4 class="mb-0 text-primary">@Dashboard.NewIdeas</h4>
          </div>
          <img class="data-card-icon" src="svg/dashboard/lightbulb.svg">
        </div>
      </div>
      <div class="col-sm">
        <div class="d-flex flex-row justify-content-between card card-body rounded-cos border-0">
          <div>
            <h6 class="text-muted">Antal svar i alt</h6>
            <h4 class="mb-0 text-primary">@Dashboard.AllComments</h4>
          </div>
          <img class="data-card-icon" src="svg/dashboard/chat-left-text.svg">
        </div>
      </div>
      <div class="col-sm">
        <div class="d-flex flex-row justify-content-between card card-body rounded-cos border-0">
          <div>
            <h6 class="text-muted">Godkendt idéer</h6>
            <h4 class="mb-0 text-primary">@Dashboard.ApprovedIdeas</h4>
          </div>
          <img class="data-card-icon" src="svg/dashboard/check-circle.svg">
        </div>
      </div>
    </div>
    <h2 class="text-center">Idéoversigt</h2>
    <p class="text-center mb-5">Klik på en idé for at læse mere </p>
    <div class="d-flex justify-content-between mb-1">
      <EditForm Model="@FilterIdea" OnValidSubmit="@Update">
        <div class="d-flex max-w-500">
          <InputText class="form-control me-2 rounded-cos" type="search" @bind-Value="FilterIdea.SearchStr" placeholder="Søg" aria-label="Søg" />
          <button class="btn btn-outline-secondary rounded-cos" type="submit">Søg</button>
        </div>
      </EditForm>
      <button class="btn btn-secondary mb-1 rounded-cos" @onclick="Reset">Nulstil</button>
    </div>
    <Modal @ref="Modal"></Modal>
    <EditForm EditContext="@_editContext">
      <div class="table-responsive rounded-cos">
        <table class="table my-0 table-primary table-striped table-hover">
          <thead>
            <tr>
              <th scope="col" style="min-width: 150px;" class="sort-select bg-primary select-filter-text align-middle" @onclick="async () => await ChangeProjectNameSort()">
                Projektnavn
                @if (FilterIdea.Sorting == Sort.ProjectNameAsc)
                {<img src="/svg/alfa-desc.svg" />}
                else if (FilterIdea.Sorting == Sort.ProjectNameDesc)
                {<img src="/svg/alfa-asc.svg" />}
                else
                {<img src="/svg/filter.svg" />}
              </th>

              <th scope="col" style="width: 179px;" class="bg-primary text-white select-filter-text align-middle">
                <InputSelect class="btn form-select select-filter noFocus" @bind-Value="FilterIdea.BusinessUnit">
                  <option value="0" selected>Forretningsenhed</option>
                  @foreach (BusinessUnitsTbl bu in (BusinessUnits))
          {
          <option value="@bu.Id">@bu.Name</option>
}
                </InputSelect>
              </th>
              <th scope="col" style="width: 145px;" class="bg-primary text-white select-filter-text align-middle">
                <InputSelect class="btn form-select select-filter noFocus" @bind-Value="FilterIdea.Department">
                  <option value="0" selected>Afdeling</option>
                  @foreach (DepartmentsTbl dep in (Departments))
          {
          <option value="@dep.Id">@dep.Name</option>
}
                </InputSelect>
              </th>
              <th scope="col" style="width: 120px;" class="bg-primary text-white select-filter-text align-middle">
                <InputSelect class="btn form-select select-filter noFocus" @bind-Value="FilterIdea.Status">
                  <option value="0" selected>Status</option>
                  @for (int i = 1; i < Config.StatusStrs.Length + 1; i++)
          {
          <option value="@i">@Config.StatusStrs[i - 1]</option>
}
                </InputSelect>
              </th>
              <th scope="col" style="width: 138px;" class="bg-primary text-white select-filter-text align-middle">
                <InputSelect class="btn form-select select-filter noFocus" @bind-Value="FilterIdea.Priority">
                  <option value="0" selected>Prioritet</option>
                  @for (int i = 1; i < Config.PriorityStrs.Length + 1; i++)
          {
          <option value="@i">@Config.PriorityStrs[i - 1]</option>
}
                </InputSelect>
              </th>
              <th scope="col" style="width: 115px;" class="sort-select bg-primary select-filter-text align-middle" @onclick="async () => await ChangeCreatedAtSort()">
                Oprettet
                @if (FilterIdea.Sorting == Sort.CreatedAtAsc)
                {<img src="/svg/sort-up.svg" />}
                else if (FilterIdea.Sorting == Sort.CreatedAtDesc)
                {<img src="/svg/sort-down.svg" />}
                else
                {<img src="/svg/filter.svg" />}
              </th>
              <th scope="col" style="width: 115px;" class="sort-select bg-primary select-filter-text align-middle" @onclick="async () => await ChangeUpdatedAtSort()">
                Opdateret
                @if (FilterIdea.Sorting == Sort.UpdatedAtAsc)
                {<img src="/svg/sort-up.svg" />}
                else if (FilterIdea.Sorting == Sort.UpdatedAtDesc)
                {<img src="/svg/sort-down.svg" /> }
                else
                {<img src="/svg/filter.svg" />}
              </th>
              <th scope="col" style="width: 57px;" class="bg-primary select-filter-text text-white mx-2 align-middle">
                Svar
              </th>
            </tr>
          </thead>
          <tbody>

            @if (_ideaList != null)
            {
              foreach (ViewIdea idea in _ideaList)
              {
                <tr title="Klik for at læse mere" @onclick="() => Modal.Open(idea, this)">
                  <td style="min-width: 150px;" class="select-filter-text">
                    <div class="d-flex">
                      @idea.ProjectName
                      @if (idea.IsHidden)
                      {
                        <p class="text-show-hidden">Skjult</p>}
                    </div>
                  </td>
                  <td>@idea.IdeaBusinessUnitStr</td>
                  <td>@idea.IdeaDepartmentStr</td>
                  <td>@idea.StatusStr</td>
                  <td>@idea.PriorityStr</td>
                  <td>@idea.CreatedAt.ToShortDateString()</td>
                  <td>@idea.UpdatedAt.ToShortDateString()</td>
                  <td>@idea.CommentsCount</td>
                </tr>
              }

            }
            else
            {
              <tr>
                <td colspan="100%" class="m-3 fs-5 text-center">Indlæser idéer...</td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    </EditForm>
    <ul class="pagination justify-content-end mt-3">
      @if (_ideaList != null)
      {
        if (CurrentPage == 1 && NumOfPages > 1)
        {
          <li class="page-item disabled">
            <a class="btn rounded-0 page-link rounded-start">Forrige</a>
          </li>
        }
        else
        {
          <li class="page-item">
            <a class="btn rounded-0 page-link text-primary rounded-start" @onclick="async () => {CurrentPage--; await ChangeUpdatedAtPage(); }">Forrige</a>
          </li>
        }
        for (int i = 1; i <= NumOfPages; i++)
        {
          int localPageIndex = i;
          if (i == CurrentPage)
          {
            <li class="page-item disabled"><a class="btn bg-primary rounded-0 page-link text-white font-weight-bold">@i</a></li>
          }
          else
          {
            <li class="page-item"><a class="btn rounded-0 page-link text-primary" @onclick=" async () => {CurrentPage = localPageIndex; await ChangeUpdatedAtPage(); }">@i</a></li>
          }
        }
        if (CurrentPage == NumOfPages)
        {
          <li class="page-item disabled">
            <a class="btn rounded-0 rounded-end page-link">Næste</a>
          </li>
        }
        else
        {
          <li class="page-item">
            <a class="btn rounded-0 rounded-end page-link text-primary" @onclick="async ()=> {CurrentPage++; await ChangeUpdatedAtPage(); }">Næste</a>
          </li>
        }
      }

    </ul>
  </div>
</section>